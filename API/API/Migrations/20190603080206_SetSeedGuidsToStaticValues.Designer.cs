// <auto-generated />
using System;
using CLERP.API.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CLERP.API.Migrations
{
    [DbContext(typeof(ClerpContext))]
    [Migration("20190603080206_SetSeedGuidsToStaticValues")]
    partial class SetSeedGuidsToStaticValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CLERP.API.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("BusinessPartnerGuid");

                    b.Property<Guid>("CityGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Housenumber");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("BusinessPartnerGuid");

                    b.HasIndex("CityGuid");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Bill", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("AdditionalDeadlineDays");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<Guid>("OrderGuid");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ValidFrom");

                    b.HasKey("Guid");

                    b.HasIndex("OrderGuid")
                        .IsUnique();

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.BusinessContact", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("BusinessPartnerGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Guid");

                    b.HasIndex("BusinessPartnerGuid");

                    b.ToTable("Business-Contacts");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.BusinessPartner", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Business-Partners");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.City", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CountryGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("PostalCode");

                    b.HasKey("Guid");

                    b.HasIndex("CountryGuid");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Compartment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Column");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<int>("Row");

                    b.Property<Guid?>("ShelfGuid");

                    b.HasKey("Guid");

                    b.HasIndex("ShelfGuid");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.ContactLog", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("ContactGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("LogMessage")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.ToTable("Business-Contact-Logs");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Country", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Department", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("c0a1d8dc-9d37-4b68-ad4e-420e14fd29af"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(529),
                            Description = "The management of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(2348),
                            LastModifiedBy = "system",
                            Title = "Management"
                        },
                        new
                        {
                            Guid = new Guid("4b7f2fb2-2726-49b3-b8ab-6f7b42120dee"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6134),
                            Description = "The finance department of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6160),
                            LastModifiedBy = "system",
                            Title = "Finance"
                        },
                        new
                        {
                            Guid = new Guid("98eb6ffe-57bb-4d49-ad13-23195a1325ee"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6213),
                            Description = "The hr department of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6219),
                            LastModifiedBy = "system",
                            Title = "HR"
                        },
                        new
                        {
                            Guid = new Guid("426a9547-086d-4847-a80e-00140da99723"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6238),
                            Description = "The sales department of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6243),
                            LastModifiedBy = "system",
                            Title = "Sales"
                        },
                        new
                        {
                            Guid = new Guid("273a60ce-7282-4141-9676-1c3040ec1303"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6260),
                            Description = "The purchase department of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6313),
                            LastModifiedBy = "system",
                            Title = "Purchase"
                        },
                        new
                        {
                            Guid = new Guid("7e645fd7-25df-4baa-898d-59963c4f4d43"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6333),
                            Description = "The logistics department of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6337),
                            LastModifiedBy = "system",
                            Title = "Logistic"
                        },
                        new
                        {
                            Guid = new Guid("2d08de41-25f6-4369-bacb-de75f90cf2ea"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6352),
                            Description = "The production department of the firm",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 38, DateTimeKind.Local).AddTicks(6357),
                            LastModifiedBy = "system",
                            Title = "Production"
                        });
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("DepartmentGuid");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Username");

                    b.HasKey("Guid");

                    b.HasIndex("DepartmentGuid");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("0dfac9a3-f4b2-47f6-8f91-4e0198e8d6bf"),
                            Birthday = new DateTime(2001, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 45, DateTimeKind.Local).AddTicks(2001),
                            Email = "admin@clerp.ch",
                            Firstname = "System",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 45, DateTimeKind.Local).AddTicks(4897),
                            LastModifiedBy = "system",
                            Lastname = "Administrator",
                            Password = "AI1ZmgGoYudgP1w9VOvAIAnobk5IXBU3wC/Pfv/Xyg0Mr9PEgJPW5UBP9ScXzpEiVg==",
                            PhoneNumber = "+41 79 122 90 72",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeOrder", b =>
                {
                    b.Property<Guid>("ProductTypeGuid");

                    b.Property<Guid>("OrderGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("ProductTypeGuid", "OrderGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("OrderGuid");

                    b.ToTable("Product-Types_Orders");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeProductType", b =>
                {
                    b.Property<Guid>("ParentGuid");

                    b.Property<Guid>("ChildGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("ParentGuid", "ChildGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ChildGuid");

                    b.ToTable("Product-Types_Product-Types");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleDepartment", b =>
                {
                    b.Property<Guid>("RoleGuid");

                    b.Property<Guid>("DepartmentGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("RoleGuid", "DepartmentGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("DepartmentGuid");

                    b.ToTable("Roles_Departments");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleEmployee", b =>
                {
                    b.Property<Guid>("RoleGuid");

                    b.Property<Guid>("EmployeeGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("RoleGuid", "EmployeeGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("EmployeeGuid");

                    b.ToTable("Roley_Employees");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("BillingAddressGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("EstimatedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<Guid>("ReceivingPartnerGuid");

                    b.Property<DateTime>("SendDate");

                    b.Property<Guid>("SendingPartnerGuid");

                    b.Property<Guid>("ShippingAddressGuid");

                    b.Property<string>("State")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("BillingAddressGuid");

                    b.HasIndex("ReceivingPartnerGuid");

                    b.HasIndex("SendingPartnerGuid");

                    b.HasIndex("ShippingAddressGuid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.PartnerLog", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("LogMessage")
                        .IsRequired();

                    b.Property<Guid>("PartnerGuid");

                    b.HasKey("Guid");

                    b.HasIndex("PartnerGuid");

                    b.ToTable("Business-Partner-Logs");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("BillGuid");

                    b.Property<Guid>("CompartmentGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("ParentGuid");

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<Guid>("TypeGuid");

                    b.HasKey("Guid");

                    b.HasIndex("BillGuid");

                    b.HasIndex("CompartmentGuid");

                    b.HasIndex("ParentGuid");

                    b.HasIndex("TypeGuid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.ProductType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("EAN")
                        .IsRequired();

                    b.Property<byte[]>("Image");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Guid");

                    b.ToTable("Product-Types");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("90f17bbe-edb8-4e0f-8492-b18d130ef058"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(40),
                            Description = "Employee from the logistics department",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(68),
                            LastModifiedBy = "system",
                            Name = "Logistic"
                        },
                        new
                        {
                            Guid = new Guid("d34ce4a4-6fae-4623-9cf9-7468a19781fb"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1343),
                            Description = "Employee from the finances department",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1354),
                            LastModifiedBy = "system",
                            Name = "Finance"
                        },
                        new
                        {
                            Guid = new Guid("58457e73-da9f-4f6e-b31b-7f89807e320c"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1377),
                            Description = "Employee from the purchases department",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1381),
                            LastModifiedBy = "system",
                            Name = "Purchase"
                        },
                        new
                        {
                            Guid = new Guid("324270ba-fc55-41de-95f2-943fc628c5ee"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1393),
                            Description = "Administrators of the app",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1396),
                            LastModifiedBy = "system",
                            Name = "SysAdmin"
                        },
                        new
                        {
                            Guid = new Guid("b6bab4db-bd5d-4b34-a6e5-085204c16c79"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1409),
                            Description = "Employee from the sales department",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1412),
                            LastModifiedBy = "system",
                            Name = "Sale"
                        },
                        new
                        {
                            Guid = new Guid("ed32b358-5eb5-41ad-8895-e65641f8d1bd"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1426),
                            Description = "Employee from the management",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1430),
                            LastModifiedBy = "system",
                            Name = "Management"
                        },
                        new
                        {
                            Guid = new Guid("e0c8423a-581f-4be9-8493-1b20aee0673a"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1440),
                            Description = "Employee from the hr department",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1444),
                            LastModifiedBy = "system",
                            Name = "HR"
                        },
                        new
                        {
                            Guid = new Guid("65231084-3178-4259-886c-4698a02c701d"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1454),
                            Description = "Employee from the production department",
                            LastModified = new DateTime(2019, 6, 3, 10, 2, 6, 86, DateTimeKind.Local).AddTicks(1457),
                            LastModifiedBy = "system",
                            Name = "Production"
                        });
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Shelf", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Designation")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<Guid>("WarehouseGuid");

                    b.HasKey("Guid");

                    b.HasIndex("WarehouseGuid");

                    b.ToTable("Shelves");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AddressGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("AddressGuid");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Address", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("Addresses")
                        .HasForeignKey("BusinessPartnerGuid");

                    b.HasOne("CLERP.API.Domain.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Bill", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Order", "Order")
                        .WithMany("Bills")
                        .HasForeignKey("OrderGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.BusinessContact", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("Contacts")
                        .HasForeignKey("BusinessPartnerGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.City", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Compartment", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Shelf", "Shelf")
                        .WithMany("Compartments")
                        .HasForeignKey("ShelfGuid");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.ContactLog", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessContact", "Contact")
                        .WithMany("Logs")
                        .HasForeignKey("ContactGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Employee", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentGuid");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeOrder", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Order", "Order")
                        .WithMany("ProductTypes")
                        .HasForeignKey("OrderGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.ProductType", "ProductType")
                        .WithMany("Orders")
                        .HasForeignKey("ProductTypeGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeProductType", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.ProductType", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.ProductType", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleDepartment", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Department", "Department")
                        .WithMany("Roles")
                        .HasForeignKey("DepartmentGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CLERP.API.Domain.Models.Role", "Role")
                        .WithMany("Departments")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleEmployee", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Employee", "Employee")
                        .WithMany("Roles")
                        .HasForeignKey("EmployeeGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CLERP.API.Domain.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Order", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Address", "BillingAddress")
                        .WithMany("BillingOrders")
                        .HasForeignKey("BillingAddressGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "ReceivingPartner")
                        .WithMany("ReceivedOrders")
                        .HasForeignKey("ReceivingPartnerGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "SendingPartner")
                        .WithMany("SendtOrders")
                        .HasForeignKey("SendingPartnerGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.Address", "ShippingAddress")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("ShippingAddressGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.PartnerLog", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "Partner")
                        .WithMany("Logs")
                        .HasForeignKey("PartnerGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Product", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Bill", "Bill")
                        .WithMany("ProductsToPay")
                        .HasForeignKey("BillGuid");

                    b.HasOne("CLERP.API.Domain.Models.Compartment", "Compartment")
                        .WithMany("Products")
                        .HasForeignKey("CompartmentGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CLERP.API.Domain.Models.Product", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.ProductType", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Shelf", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Warehouse", "Warehouse")
                        .WithMany("Shelves")
                        .HasForeignKey("WarehouseGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Warehouse", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Address", "Address")
                        .WithMany("Warehouses")
                        .HasForeignKey("AddressGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
