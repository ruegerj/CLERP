// <auto-generated />
using System;
using CLERP.API.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CLERP.API.Migrations
{
    [DbContext(typeof(ClerpContext))]
    [Migration("20190520201025_AddedSystemAccount")]
    partial class AddedSystemAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CLERP.API.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("BusinessPartnerGuid");

                    b.Property<Guid>("CityGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Housenumber");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("BusinessPartnerGuid");

                    b.HasIndex("CityGuid");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Bill", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("AdditionalDeadlineDays");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<Guid>("OrderGuid");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ValidFrom");

                    b.HasKey("Guid");

                    b.HasIndex("OrderGuid")
                        .IsUnique();

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.BusinessContact", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("BusinessPartnerGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Guid");

                    b.HasIndex("BusinessPartnerGuid");

                    b.ToTable("Business-Contacts");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.BusinessPartner", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Business-Partners");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.City", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CountryGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("PostalCode");

                    b.HasKey("Guid");

                    b.HasIndex("CountryGuid");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Compartment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Column");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<int>("Row");

                    b.Property<Guid?>("ShelfGuid");

                    b.HasKey("Guid");

                    b.HasIndex("ShelfGuid");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.ContactLog", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("ContactGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("LogMessage")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.ToTable("Business-Contact-Logs");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Country", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Department", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("cdc29573-5a22-4869-828e-1b13250fe172"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 122, DateTimeKind.Local).AddTicks(7392),
                            Description = "The management of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 122, DateTimeKind.Local).AddTicks(8834),
                            LastModifiedBy = "system",
                            Title = "Management"
                        },
                        new
                        {
                            Guid = new Guid("05ea1cfa-0d1d-4d67-868b-5abec3818105"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(1950),
                            Description = "The finance department of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(1973),
                            LastModifiedBy = "system",
                            Title = "Finance"
                        },
                        new
                        {
                            Guid = new Guid("3e541866-5c8e-4fea-8c0a-212d767903de"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2005),
                            Description = "The hr department of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2010),
                            LastModifiedBy = "system",
                            Title = "HR"
                        },
                        new
                        {
                            Guid = new Guid("ce7ca901-9d9c-44da-a479-16875f464c7c"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2015),
                            Description = "The sales department of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2019),
                            LastModifiedBy = "system",
                            Title = "Sales"
                        },
                        new
                        {
                            Guid = new Guid("b156c5eb-78e3-4345-97ac-00f29cdd31be"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2024),
                            Description = "The purchase department of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2028),
                            LastModifiedBy = "system",
                            Title = "Purchase"
                        },
                        new
                        {
                            Guid = new Guid("d299cde1-6fd1-4168-8f3e-1fa4f2a607ba"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2036),
                            Description = "The logistics department of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2040),
                            LastModifiedBy = "system",
                            Title = "Logistic"
                        },
                        new
                        {
                            Guid = new Guid("eafcbeb6-2fb0-402a-9d31-4f322dbfeab0"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2045),
                            Description = "The production department of the firm",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 123, DateTimeKind.Local).AddTicks(2048),
                            LastModifiedBy = "system",
                            Title = "Production"
                        });
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("DepartmentGuid");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Username");

                    b.HasKey("Guid");

                    b.HasIndex("DepartmentGuid");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("29c0a310-c859-476d-b614-546a7f4e85c7"),
                            Birthday = new DateTime(2001, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 128, DateTimeKind.Local).AddTicks(6148),
                            Email = "admin@clerp.ch",
                            Firstname = "System",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 128, DateTimeKind.Local).AddTicks(8467),
                            LastModifiedBy = "system",
                            Lastname = "Administrator",
                            Password = "AI1ZmgGoYudgP1w9VOvAIAnobk5IXBU3wC/Pfv/Xyg0Mr9PEgJPW5UBP9ScXzpEiVg==",
                            PhoneNumber = "+41 79 122 90 72",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeOrder", b =>
                {
                    b.Property<Guid>("ProductTypeGuid");

                    b.Property<Guid>("OrderGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("ProductTypeGuid", "OrderGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("OrderGuid");

                    b.ToTable("Product-Types_Orders");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeProductType", b =>
                {
                    b.Property<Guid>("ParentGuid");

                    b.Property<Guid>("ChildGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("ParentGuid", "ChildGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ChildGuid");

                    b.ToTable("Product-Types_Product-Types");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleDepartment", b =>
                {
                    b.Property<Guid>("RoleGuid");

                    b.Property<Guid>("DepartmentGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("RoleGuid", "DepartmentGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("DepartmentGuid");

                    b.ToTable("Roles_Departments");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleEmployee", b =>
                {
                    b.Property<Guid>("RoleGuid");

                    b.Property<Guid>("EmployeeGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.HasKey("RoleGuid", "EmployeeGuid")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("EmployeeGuid");

                    b.ToTable("Roley_Employees");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("BillingAddressGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<decimal>("EstimatedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<Guid>("ReceivingPartnerGuid");

                    b.Property<DateTime>("SendDate");

                    b.Property<Guid>("SendingPartnerGuid");

                    b.Property<Guid>("ShippingAddressGuid");

                    b.Property<string>("State")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("BillingAddressGuid");

                    b.HasIndex("ReceivingPartnerGuid");

                    b.HasIndex("SendingPartnerGuid");

                    b.HasIndex("ShippingAddressGuid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.PartnerLog", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("LogMessage")
                        .IsRequired();

                    b.Property<Guid>("PartnerGuid");

                    b.HasKey("Guid");

                    b.HasIndex("PartnerGuid");

                    b.ToTable("Business-Partner-Logs");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("BillGuid");

                    b.Property<Guid>("CompartmentGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("ParentGuid");

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<Guid>("TypeGuid");

                    b.HasKey("Guid");

                    b.HasIndex("BillGuid");

                    b.HasIndex("CompartmentGuid");

                    b.HasIndex("ParentGuid");

                    b.HasIndex("TypeGuid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.ProductType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("EAN")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Guid");

                    b.ToTable("Product-Types");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("5b9ead8f-3a10-4e95-906b-f8c7190795de"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 173, DateTimeKind.Local).AddTicks(8979),
                            Description = "Employee from the logistics department",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 173, DateTimeKind.Local).AddTicks(9014),
                            LastModifiedBy = "system",
                            Name = "Logistic"
                        },
                        new
                        {
                            Guid = new Guid("f2988ca5-e263-47e3-b9b5-40bd047243c6"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(460),
                            Description = "Employee from the finances department",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(471),
                            LastModifiedBy = "system",
                            Name = "Finance"
                        },
                        new
                        {
                            Guid = new Guid("8517cf31-aec0-455e-a174-cd98fa048f07"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(488),
                            Description = "Employee from the purchases department",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(492),
                            LastModifiedBy = "system",
                            Name = "Purchase"
                        },
                        new
                        {
                            Guid = new Guid("7b52c1f2-c13a-475a-8769-4b1be4c1c16d"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(499),
                            Description = "Administrators of the app",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(502),
                            LastModifiedBy = "system",
                            Name = "SysAdmin"
                        },
                        new
                        {
                            Guid = new Guid("53ce70e3-73f2-4dcc-a857-0a7cfb875cee"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(507),
                            Description = "Employee from the sales department",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(511),
                            LastModifiedBy = "system",
                            Name = "Sale"
                        },
                        new
                        {
                            Guid = new Guid("c624e9c2-84d3-4b95-91d7-5cde0865c34e"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(519),
                            Description = "Employee from the management",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(523),
                            LastModifiedBy = "system",
                            Name = "Management"
                        },
                        new
                        {
                            Guid = new Guid("b5b9a5a0-a6d6-4469-bc4a-7142728b94eb"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(536),
                            Description = "Employee from the hr department",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(540),
                            LastModifiedBy = "system",
                            Name = "HR"
                        },
                        new
                        {
                            Guid = new Guid("263aae9a-baad-4730-9388-4dbd39e2c7c8"),
                            CreatedBy = "system",
                            Creation = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(547),
                            Description = "Employee from the production department",
                            LastModified = new DateTime(2019, 5, 20, 22, 10, 25, 174, DateTimeKind.Local).AddTicks(550),
                            LastModifiedBy = "system",
                            Name = "Production"
                        });
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Shelf", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Designation")
                        .IsRequired();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<Guid>("WarehouseGuid");

                    b.HasKey("Guid");

                    b.HasIndex("WarehouseGuid");

                    b.ToTable("Shelves");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AddressGuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Creation")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("LastModifiedBy")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.HasIndex("AddressGuid");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Address", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("Addresses")
                        .HasForeignKey("BusinessPartnerGuid");

                    b.HasOne("CLERP.API.Domain.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Bill", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Order", "Order")
                        .WithMany("Bills")
                        .HasForeignKey("OrderGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.BusinessContact", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("Contacts")
                        .HasForeignKey("BusinessPartnerGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.City", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Compartment", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Shelf", "Shelf")
                        .WithMany("Compartments")
                        .HasForeignKey("ShelfGuid");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.ContactLog", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessContact", "Contact")
                        .WithMany("Logs")
                        .HasForeignKey("ContactGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Employee", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentGuid");
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeOrder", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Order", "Order")
                        .WithMany("ProductTypes")
                        .HasForeignKey("OrderGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.ProductType", "ProductType")
                        .WithMany("Orders")
                        .HasForeignKey("ProductTypeGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.ProductTypeProductType", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.ProductType", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.ProductType", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleDepartment", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Department", "Department")
                        .WithMany("Roles")
                        .HasForeignKey("DepartmentGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CLERP.API.Domain.Models.Role", "Role")
                        .WithMany("Departments")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Link.RoleEmployee", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Employee", "Employee")
                        .WithMany("Roles")
                        .HasForeignKey("EmployeeGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CLERP.API.Domain.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Order", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Address", "BillingAddress")
                        .WithMany("BillingOrders")
                        .HasForeignKey("BillingAddressGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "ReceivingPartner")
                        .WithMany("ReceivedOrders")
                        .HasForeignKey("ReceivingPartnerGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "SendingPartner")
                        .WithMany("SendtOrders")
                        .HasForeignKey("SendingPartnerGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.Address", "ShippingAddress")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("ShippingAddressGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.PartnerLog", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.BusinessPartner", "Partner")
                        .WithMany("Logs")
                        .HasForeignKey("PartnerGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Product", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Bill", "Bill")
                        .WithMany("ProductsToPay")
                        .HasForeignKey("BillGuid");

                    b.HasOne("CLERP.API.Domain.Models.Compartment", "Compartment")
                        .WithMany("Products")
                        .HasForeignKey("CompartmentGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CLERP.API.Domain.Models.Product", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentGuid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLERP.API.Domain.Models.ProductType", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Shelf", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Warehouse", "Warehouse")
                        .WithMany("Shelves")
                        .HasForeignKey("WarehouseGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLERP.API.Domain.Models.Warehouse", b =>
                {
                    b.HasOne("CLERP.API.Domain.Models.Address", "Address")
                        .WithMany("Warehouses")
                        .HasForeignKey("AddressGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
